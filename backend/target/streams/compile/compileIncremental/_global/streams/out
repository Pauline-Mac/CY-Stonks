[debug] [zinc] IncrementalCompile -----------
[debug] IncrementalCompile.incrementalCompile
[debug] previous = Stamps for: 26 products, 5 sources, 11 libraries
[debug] current source = Set(${BASE}/src/main/scala/actors/PortfolioActor.scala, ${BASE}/src/main/scala/controllers/API/AlphaVantageClient.scala, ${BASE}/src/main/scala/Main.scala, ${BASE}/src/main/scala/actors/UserActor.scala, ${BASE}/src/main/scala/controllers/DataBaseController.scala)
[debug] > initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/src/main/scala/controllers/API/AlphaVantageClient.scala, ${BASE}/src/main/scala/Main.scala), unmodified = ...),Set(),Set(),API Changes: Set())
[debug] 
[debug] Initial source changes:
[debug] 	removed: Set()
[debug] 	added: Set()
[debug] 	modified: Set(${BASE}/src/main/scala/controllers/API/AlphaVantageClient.scala, ${BASE}/src/main/scala/Main.scala)
[debug] Invalidated products: Set()
[debug] External API changes: API Changes: Set()
[debug] Modified binary dependencies: Set()
[debug] Initial directly invalidated classes: Set(controllers.API.AlphaVantageClient, Main)
[debug] Sources indirectly invalidated by:
[debug] 	product: Set()
[debug] 	binary dep: Set()
[debug] 	external source: Set()
[debug] All initially invalidated classes: Set(controllers.API.AlphaVantageClient, Main)
[debug] All initially invalidated sources:Set(${BASE}/src/main/scala/controllers/API/AlphaVantageClient.scala, ${BASE}/src/main/scala/Main.scala)
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient, Main
[debug] compilation cycle 1
[info] compiling 2 Scala sources to /app/target/scala-3.3.5/classes ...
[debug] Returning already retrieved and compiled bridge: /root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-sbt-bridge/3.3.5/scala3-sbt-bridge-3.3.5.jar.
[debug] [zinc] Running cached compiler 736a804c for Scala Compiler version 3.3.5
[debug] [zinc] The Scala compiler is invoked with:
[debug] 	-classpath
[debug] 	/app/target/scala-3.3.5/classes:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.3.5/scala3-library_3-3.3.5.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-actor-typed_3/2.8.3/akka-actor-typed_3-2.8.3.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http_3/10.5.2/akka-http_3-10.5.2.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-native_3/4.0.3/json4s-native_3-4.0.3.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-stream_3/2.8.3/akka-stream_3-2.8.3.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/postgresql/postgresql/42.5.1/postgresql-42.5.1.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/mindrot/jbcrypt/0.4/jbcrypt-0.4.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.4.11/logback-classic-1.4.11.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.15/scala-library-2.13.15.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-actor_3/2.8.3/akka-actor_3-2.8.3.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-slf4j_3/2.8.3/akka-slf4j_3-2.8.3.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http-core_3/10.5.2/akka-http-core_3-10.5.2.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-core_3/4.0.3/json4s-core_3-4.0.3.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-native-core_3/4.0.3/json4s-native-core_3-4.0.3.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-protobuf-v3_3/2.8.3/akka-protobuf-v3_3-2.8.3.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/ssl-config-core_3/0.6.1/ssl-config-core_3-0.6.1.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/ch/qos/logback/logback-core/1.4.11/logback-core-1.4.11.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/config/1.4.2/config-1.4.2.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-java8-compat_3/1.0.0/scala-java8-compat_3-1.0.0.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-parsing_3/10.5.2/akka-parsing_3-10.5.2.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-ast_3/4.0.3/json4s-ast_3-4.0.3.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-scalap_3/4.0.3/json4s-scalap_3-4.0.3.jar:/root/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar
[debug] Scala compilation took 8.547686021 s
[info] done compiling
[debug] Invalidating (transitively) by inheritance from controllers.API.AlphaVantageClient$.Command...
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient$.Command
[debug] Including controllers.API.AlphaVantageClient$.GetTopGainers by controllers.API.AlphaVantageClient$.Command
[debug] Including controllers.API.AlphaVantageClient$.GetStockPrice by controllers.API.AlphaVantageClient$.Command
[debug] Including controllers.API.AlphaVantageClient$.GetRSI by controllers.API.AlphaVantageClient$.Command
[debug] Invalidated by transitive inheritance dependency: Set(controllers.API.AlphaVantageClient$.GetStockPrice, controllers.API.AlphaVantageClient$.GetRSI, controllers.API.AlphaVantageClient$.Command, controllers.API.AlphaVantageClient$.GetTopGainers)
[debug] The following modified names cause invalidation of Main: [UsedName(java;lang;Object;init;,[Default]), UsedName(Command,[Default])]
[debug] The following modified names cause invalidation of Main: [UsedName(java;lang;Object;init;,[Default]), UsedName(Command,[Default])]
[debug] The following modified names cause invalidation of Main: [UsedName(java;lang;Object;init;,[Default]), UsedName(Command,[Default])]
[debug] The following modified names cause invalidation of Main: [UsedName(java;lang;Object;init;,[Default]), UsedName(Command,[Default])]
[debug] Change NamesChange(controllers.API.AlphaVantageClient$.Command,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;Command;init;,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(Command,[Default]), UsedName(clone,[Default]))) invalidates 5 classes due to The controllers.API.AlphaVantageClient$.Command has the following regular definitions changed:
[debug] 	UsedName(isInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;Command;init;,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(Command,[Default]), UsedName(clone,[Default]).
[debug]   > by transitive inheritance: Set(controllers.API.AlphaVantageClient$.GetStockPrice, controllers.API.AlphaVantageClient$.GetRSI, controllers.API.AlphaVantageClient$.Command, controllers.API.AlphaVantageClient$.GetTopGainers)
[debug]   > 
[debug]   > by member reference: Set(Main)
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from Main...
[debug] Initial set of included nodes: Main
[debug] Invalidated by transitive inheritance dependency: Set(Main)
[debug] Change NamesChange(Main,ModifiedNames(changes = UsedName(responseHandler,[Default]), UsedName(system,[Default, Implicit]), UsedName(stockDataActor,[Default]), UsedName(alphaVantageClient,[Default]))) invalidates 1 classes due to The Main has the following implicit definitions changed:
[debug] 	UsedName(system,[Default, Implicit]).
[debug]   > by transitive inheritance: Set(Main)
[debug]   > 
[debug]   > 
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from controllers.API.AlphaVantageClient$.Response...
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient$.Response
[debug] Including controllers.API.AlphaVantageClient$.ErrorResponse by controllers.API.AlphaVantageClient$.Response
[debug] Including controllers.API.AlphaVantageClient$.RSIResponse by controllers.API.AlphaVantageClient$.Response
[debug] Including controllers.API.AlphaVantageClient$.StockPriceResponse by controllers.API.AlphaVantageClient$.Response
[debug] Including controllers.API.AlphaVantageClient$.TopGainersResponse by controllers.API.AlphaVantageClient$.Response
[debug] Invalidated by transitive inheritance dependency: Set(controllers.API.AlphaVantageClient$.RSIResponse, controllers.API.AlphaVantageClient$.StockPriceResponse, controllers.API.AlphaVantageClient$.Response, controllers.API.AlphaVantageClient$.ErrorResponse, controllers.API.AlphaVantageClient$.TopGainersResponse)
[debug] The following modified names cause invalidation of Main: [UsedName(Response,[Default, PatMatTarget]), UsedName(java;lang;Object;init;,[Default])]
[debug] The following modified names cause invalidation of Main: [UsedName(Response,[Default, PatMatTarget]), UsedName(java;lang;Object;init;,[Default])]
[debug] The following modified names cause invalidation of Main: [UsedName(Response,[Default, PatMatTarget]), UsedName(java;lang;Object;init;,[Default])]
[debug] The following modified names cause invalidation of Main: [UsedName(Response,[Default, PatMatTarget]), UsedName(java;lang;Object;init;,[Default])]
[debug] The following modified names cause invalidation of Main: [UsedName(Response,[Default, PatMatTarget]), UsedName(java;lang;Object;init;,[Default])]
[debug] Change NamesChange(controllers.API.AlphaVantageClient$.Response,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;Response;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(Response,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]))) invalidates 6 classes due to The controllers.API.AlphaVantageClient$.Response has the following regular definitions changed:
[debug] 	UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;Response;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(Response,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]).
[debug]   > by transitive inheritance: Set(controllers.API.AlphaVantageClient$.RSIResponse, controllers.API.AlphaVantageClient$.StockPriceResponse, controllers.API.AlphaVantageClient$.Response, controllers.API.AlphaVantageClient$.ErrorResponse, controllers.API.AlphaVantageClient$.TopGainersResponse)
[debug]   > 
[debug]   > by member reference: Set(Main)
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from controllers.API.AlphaVantageClient...
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient
[debug] Invalidated by transitive inheritance dependency: Set(controllers.API.AlphaVantageClient)
[debug] The following member ref dependencies of controllers.API.AlphaVantageClient are invalidated:
[debug] 	Main
[debug] Change NamesChange(controllers.API.AlphaVantageClient,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(ec,[Implicit]), UsedName(notify,[Default]), UsedName(stockDataActor,[Default]), UsedName(synchronized,[Default]), UsedName(GetRSI,[Default]), UsedName(apply,[Default]), UsedName(wait,[Default]), UsedName($isInstanceOf,[Default]), UsedName(getStockPrice,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(AlphaVantageClient,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(formats,[Implicit]), UsedName(RSIResponse,[Default]), UsedName(ErrorResponse,[Default]), UsedName(StockPriceResponse,[Default]), UsedName($asInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(getTopGainersLosers,[Default]), UsedName(equals,[Default]), UsedName(TopGainersResponse,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getRSI,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(Response,[Default]), UsedName(ne,[Default]), UsedName(controllers;API;AlphaVantageClient;init;,[Default]), UsedName(##,[Default]), UsedName(Command,[Default]), UsedName(GetTopGainers,[Default]), UsedName(clone,[Default]), UsedName(GetStockPrice,[Default]))) invalidates 2 classes due to The controllers.API.AlphaVantageClient has the following implicit definitions changed:
[debug] 	UsedName(ec,[Implicit]), UsedName(formats,[Implicit]).
[debug]   > by transitive inheritance: Set(controllers.API.AlphaVantageClient)
[debug]   > 
[debug]   > by member reference: Set(Main)
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from controllers.API.AlphaVantageClient$.GetRSI...
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient$.GetRSI
[debug] Invalidated by transitive inheritance dependency: Set(controllers.API.AlphaVantageClient$.GetRSI)
[debug] The following modified names cause invalidation of Main: [UsedName(unapply,[Default]), UsedName(GetRSI,[Default]), UsedName(symbol,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(apply,[Default])]
[debug] Change NamesChange(controllers.API.AlphaVantageClient$.GetRSI,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;Command;init;,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(GetRSI,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetRSI$;init;,[Default]), UsedName(_1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(replyTo,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(getClass,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetRSI;init;,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(symbol,[Default]), UsedName(clone,[Default]), UsedName(_2,[Default]))) invalidates 2 classes due to The controllers.API.AlphaVantageClient$.GetRSI has the following regular definitions changed:
[debug] 	UsedName(isInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;Command;init;,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(GetRSI,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetRSI$;init;,[Default]), UsedName(_1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(replyTo,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(getClass,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetRSI;init;,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(symbol,[Default]), UsedName(clone,[Default]), UsedName(_2,[Default]).
[debug]   > by transitive inheritance: Set(controllers.API.AlphaVantageClient$.GetRSI)
[debug]   > 
[debug]   > by member reference: Set(Main)
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from controllers.API.AlphaVantageClient$.GetTopGainers...
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient$.GetTopGainers
[debug] Invalidated by transitive inheritance dependency: Set(controllers.API.AlphaVantageClient$.GetTopGainers)
[debug] The following modified names cause invalidation of Main: [UsedName(unapply,[Default]), UsedName(GetTopGainers,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(apply,[Default])]
[debug] Change NamesChange(controllers.API.AlphaVantageClient$.GetTopGainers,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;Command;init;,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(replyTo,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetTopGainers;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetTopGainers$;init;,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(GetTopGainers,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The controllers.API.AlphaVantageClient$.GetTopGainers has the following regular definitions changed:
[debug] 	UsedName(isInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;Command;init;,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(replyTo,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetTopGainers;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetTopGainers$;init;,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(GetTopGainers,[Default]), UsedName(clone,[Default]).
[debug]   > by transitive inheritance: Set(controllers.API.AlphaVantageClient$.GetTopGainers)
[debug]   > 
[debug]   > by member reference: Set(Main)
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from controllers.API.AlphaVantageClient$.TopGainersResponse...
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient$.TopGainersResponse
[debug] Invalidated by transitive inheritance dependency: Set(controllers.API.AlphaVantageClient$.TopGainersResponse)
[debug] The following modified names cause invalidation of Main: [UsedName(unapply,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(TopGainersResponse,[Default]), UsedName(gainers,[Default]), UsedName(apply,[Default])]
[debug] Change NamesChange(controllers.API.AlphaVantageClient$.TopGainersResponse,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;TopGainersResponse;init;,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(TopGainersResponse,[Default]), UsedName(gainers,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;Response;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(controllers;API;AlphaVantageClient$;TopGainersResponse$;init;,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The controllers.API.AlphaVantageClient$.TopGainersResponse has the following regular definitions changed:
[debug] 	UsedName(isInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;TopGainersResponse;init;,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(TopGainersResponse,[Default]), UsedName(gainers,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;Response;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(controllers;API;AlphaVantageClient$;TopGainersResponse$;init;,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(clone,[Default]).
[debug]   > by transitive inheritance: Set(controllers.API.AlphaVantageClient$.TopGainersResponse)
[debug]   > 
[debug]   > by member reference: Set(Main)
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from controllers.API.AlphaVantageClient$.RSIResponse...
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient$.RSIResponse
[debug] Invalidated by transitive inheritance dependency: Set(controllers.API.AlphaVantageClient$.RSIResponse)
[debug] The following modified names cause invalidation of Main: [UsedName(rsi,[Default]), UsedName(RSIResponse,[Default]), UsedName(unapply,[Default]), UsedName(symbol,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(apply,[Default])]
[debug] Change NamesChange(controllers.API.AlphaVantageClient$.RSIResponse,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(RSIResponse,[Default]), UsedName(rsi,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;RSIResponse;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;Response;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;RSIResponse$;init;,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(symbol,[Default]), UsedName(clone,[Default]), UsedName(_2,[Default]))) invalidates 2 classes due to The controllers.API.AlphaVantageClient$.RSIResponse has the following regular definitions changed:
[debug] 	UsedName(isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(RSIResponse,[Default]), UsedName(rsi,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;RSIResponse;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;Response;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;RSIResponse$;init;,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(symbol,[Default]), UsedName(clone,[Default]), UsedName(_2,[Default]).
[debug]   > by transitive inheritance: Set(controllers.API.AlphaVantageClient$.RSIResponse)
[debug]   > 
[debug]   > by member reference: Set(Main)
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from controllers.API.AlphaVantageClient$.ErrorResponse...
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient$.ErrorResponse
[debug] Invalidated by transitive inheritance dependency: Set(controllers.API.AlphaVantageClient$.ErrorResponse)
[debug] The following modified names cause invalidation of Main: [UsedName(ErrorResponse,[Default]), UsedName(message,[Default]), UsedName(unapply,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(apply,[Default])]
[debug] Change NamesChange(controllers.API.AlphaVantageClient$.ErrorResponse,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName(ErrorResponse,[Default]), UsedName(controllers;API;AlphaVantageClient$;ErrorResponse$;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(message,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(controllers;API;AlphaVantageClient$;ErrorResponse;init;,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;Response;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(clone,[Default]))) invalidates 2 classes due to The controllers.API.AlphaVantageClient$.ErrorResponse has the following regular definitions changed:
[debug] 	UsedName(isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName(ErrorResponse,[Default]), UsedName(controllers;API;AlphaVantageClient$;ErrorResponse$;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(message,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(controllers;API;AlphaVantageClient$;ErrorResponse;init;,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;Response;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(clone,[Default]).
[debug]   > by transitive inheritance: Set(controllers.API.AlphaVantageClient$.ErrorResponse)
[debug]   > 
[debug]   > by member reference: Set(Main)
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from controllers.API.AlphaVantageClient$.StockPriceResponse...
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient$.StockPriceResponse
[debug] Invalidated by transitive inheritance dependency: Set(controllers.API.AlphaVantageClient$.StockPriceResponse)
[debug] The following modified names cause invalidation of Main: [UsedName(StockPriceResponse,[Default]), UsedName(unapply,[Default]), UsedName(symbol,[Default]), UsedName(price,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(apply,[Default])]
[debug] Change NamesChange(controllers.API.AlphaVantageClient$.StockPriceResponse,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName(StockPriceResponse,[Default]), UsedName($asInstanceOf,[Default]), UsedName(price,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(controllers;API;AlphaVantageClient$;StockPriceResponse;init;,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;Response;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;StockPriceResponse$;init;,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(symbol,[Default]), UsedName(clone,[Default]), UsedName(_2,[Default]))) invalidates 2 classes due to The controllers.API.AlphaVantageClient$.StockPriceResponse has the following regular definitions changed:
[debug] 	UsedName(isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName(StockPriceResponse,[Default]), UsedName($asInstanceOf,[Default]), UsedName(price,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(controllers;API;AlphaVantageClient$;StockPriceResponse;init;,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;Response;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(controllers;API;AlphaVantageClient$;StockPriceResponse$;init;,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(symbol,[Default]), UsedName(clone,[Default]), UsedName(_2,[Default]).
[debug]   > by transitive inheritance: Set(controllers.API.AlphaVantageClient$.StockPriceResponse)
[debug]   > 
[debug]   > by member reference: Set(Main)
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from controllers.API.AlphaVantageClient$.GetStockPrice...
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient$.GetStockPrice
[debug] Invalidated by transitive inheritance dependency: Set(controllers.API.AlphaVantageClient$.GetStockPrice)
[debug] The following modified names cause invalidation of Main: [UsedName(unapply,[Default]), UsedName(symbol,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(GetStockPrice,[Default]), UsedName(apply,[Default])]
[debug] Change NamesChange(controllers.API.AlphaVantageClient$.GetStockPrice,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;Command;init;,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(replyTo,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetStockPrice;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(symbol,[Default]), UsedName(clone,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetStockPrice$;init;,[Default]), UsedName(GetStockPrice,[Default]), UsedName(_2,[Default]))) invalidates 2 classes due to The controllers.API.AlphaVantageClient$.GetStockPrice has the following regular definitions changed:
[debug] 	UsedName(isInstanceOf,[Default]), UsedName(controllers;API;AlphaVantageClient$;Command;init;,[Default]), UsedName(unapply,[Default]), UsedName(fromProduct,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MirroredLabel,[Default]), UsedName(apply,[Default]), UsedName(productElementName,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(MirroredMonoType,[Default]), UsedName($isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(MirroredElemLabels,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(_1,[Default]), UsedName($asInstanceOf,[Default]), UsedName(replyTo,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(java;io;Serializable;init;,[Default]), UsedName(equals,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetStockPrice;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(scala;deriving;Mirror;init;,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(java;lang;Object;init;,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(scala;deriving;Mirror$;Product;init;,[Default]), UsedName(symbol,[Default]), UsedName(clone,[Default]), UsedName(controllers;API;AlphaVantageClient$;GetStockPrice$;init;,[Default]), UsedName(GetStockPrice,[Default]), UsedName(_2,[Default]).
[debug]   > by transitive inheritance: Set(controllers.API.AlphaVantageClient$.GetStockPrice)
[debug]   > 
[debug]   > by member reference: Set(Main)
[debug]   > 
[debug]         
[debug] New invalidations:
[debug] Initial set of included nodes: 
[debug] Previously invalidated, but (transitively) depend on new invalidations:
[debug] Final step, transitive dependencies:
[debug] 	Set()
[debug] Initial set of included nodes: controllers.API.AlphaVantageClient$.RSIResponse, controllers.API.AlphaVantageClient$.GetStockPrice, controllers.API.AlphaVantageClient$.GetRSI, controllers.API.AlphaVantageClient$.Command, controllers.API.AlphaVantageClient$.StockPriceResponse, controllers.API.AlphaVantageClient, controllers.API.AlphaVantageClient$.Response, Main, controllers.API.AlphaVantageClient$.ErrorResponse, controllers.API.AlphaVantageClient$.GetTopGainers, controllers.API.AlphaVantageClient$.TopGainersResponse
[debug] Including Main by controllers.API.AlphaVantageClient$.RSIResponse
[debug] Invalidated macros due to upstream dependencies change: Set()
[debug] No classes were invalidated.
